version: '3.8'

services:
  # Test MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: test-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=testpass123
      - MONGO_INITDB_DATABASE=test-db
    volumes:
      - test_mongodb_data:/data/db
    networks:
      - test-network
    ports:
      - "27019:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # Test Redis Cache
  redis:
    image: redis:7-alpine
    container_name: test-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass testredis123
    volumes:
      - test_redis_data:/data
    networks:
      - test-network
    ports:
      - "6381:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "testredis123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Backend API (for integration tests)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: test-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=test
      - PORT=9001
      - MONGODB_URI=mongodb://admin:testpass123@mongodb:27017/test-db?authSource=admin
      - REDIS_URL=redis://:testredis123@redis:6379
      - JWT_SECRET=test_jwt_secret_key_for_testing_only
      - JWT_REFRESH_SECRET=test_refresh_secret_key_for_testing_only
      - BCRYPT_SALT_ROUNDS=4
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=1000
      - LOG_LEVEL=error
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - test-network
    ports:
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Test Nginx (for integration testing)
  nginx:
    image: nginx:alpine
    container_name: test-nginx
    restart: unless-stopped
    ports:
      - "8082:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  test-network:
    driver: bridge

volumes:
  test_mongodb_data:
    driver: local
  test_redis_data:
    driver: local