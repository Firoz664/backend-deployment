groups:
  - name: backend_alerts
    rules:
      - alert: BackendDown
        expr: up{job="backend"} == 0
        for: 1m
        labels:
          severity: critical
          service: backend
        annotations:
          summary: "Backend API is down"
          description: "Backend API has been down for more than 1 minute"
          runbook_url: "https://docs.company.com/runbooks/backend-down"

      - alert: HighErrorRate
        expr: rate(http_requests_total{job="backend",status=~"5.."}[5m]) / rate(http_requests_total{job="backend"}[5m]) * 100 > 5
        for: 5m
        labels:
          severity: warning
          service: backend
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }}% for the last 5 minutes"
          runbook_url: "https://docs.company.com/runbooks/high-error-rate"

      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="backend"}[5m])) > 1
        for: 5m
        labels:
          severity: warning
          service: backend
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s"
          runbook_url: "https://docs.company.com/runbooks/high-response-time"

      - alert: BackendMemoryUsage
        expr: process_resident_memory_bytes{job="backend"} / 1024 / 1024 > 512
        for: 10m
        labels:
          severity: warning
          service: backend
        annotations:
          summary: "High memory usage detected"
          description: "Backend memory usage is {{ $value }}MB"
          runbook_url: "https://docs.company.com/runbooks/high-memory"

      - alert: LowRequestVolume
        expr: rate(http_requests_total{job="backend"}[10m]) < 0.1
        for: 10m
        labels:
          severity: warning
          service: backend
        annotations:
          summary: "Low request volume detected"
          description: "Request rate is {{ $value }} requests/second for the last 10 minutes"

      - alert: AuthenticationFailures
        expr: increase(http_requests_total{job="backend",path=~"/api/auth/.*",status="401"}[5m]) > 10
        for: 1m
        labels:
          severity: warning
          service: backend
        annotations:
          summary: "High authentication failure rate"
          description: "{{ $value }} authentication failures in the last 5 minutes"
          runbook_url: "https://docs.company.com/runbooks/auth-failures"

      - alert: HighMemoryUsage
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes > 0.8
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High system memory usage detected"
          description: "System memory usage is above 80% for more than 5 minutes"

      - alert: HighCPUUsage
        expr: 100 - (avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 80% for more than 5 minutes"

      - alert: DiskSpaceLow
        expr: (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"}) * 100 < 10
        for: 5m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "Disk space is running low"
          description: "Available disk space is less than 10% on {{ $labels.device }}"

  - name: database_alerts
    rules:
      - alert: MongoDBDown
        expr: up{job="mongodb-exporter"} == 0
        for: 2m
        labels:
          severity: critical
          service: mongodb
        annotations:
          summary: "MongoDB is down"
          description: "MongoDB has been down for more than 2 minutes"
          runbook_url: "https://docs.company.com/runbooks/mongodb-down"

      - alert: MongoDBHighConnections
        expr: mongodb_connections{state="current"} / mongodb_connections{state="available"} > 0.8
        for: 5m
        labels:
          severity: warning
          service: mongodb
        annotations:
          summary: "MongoDB connection usage is high"
          description: "MongoDB is using {{ $value }}% of available connections"

      - alert: MongoDBReplicationLag
        expr: mongodb_replset_member_replication_lag > 10
        for: 5m
        labels:
          severity: warning
          service: mongodb
        annotations:
          summary: "MongoDB replication lag is high"
          description: "MongoDB replication lag is {{ $value }}s"

      - alert: RedisDown
        expr: up{job="redis-exporter"} == 0
        for: 2m
        labels:
          severity: critical
          service: redis
        annotations:
          summary: "Redis is down"
          description: "Redis has been down for more than 2 minutes"
          runbook_url: "https://docs.company.com/runbooks/redis-down"

      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes{job="redis-exporter"} > 0.8
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis memory usage is high"
          description: "Redis memory usage is {{ $value | humanizePercentage }}"

      - alert: RedisHighConnectionCount
        expr: redis_connected_clients{job="redis-exporter"} > 100
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis has high number of connections"
          description: "Redis has {{ $value }} connected clients"

      - alert: RedisSlowQueries
        expr: increase(redis_slowlog_length{job="redis-exporter"}[5m]) > 10
        for: 1m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis slow queries detected"
          description: "{{ $value }} slow queries in the last 5 minutes"

  - name: monitoring_stack_alerts
    rules:
      - alert: PrometheusDown
        expr: up{job="prometheus"} == 0
        for: 1m
        labels:
          severity: critical
          service: monitoring
        annotations:
          summary: "Prometheus is down"
          description: "Prometheus has been down for more than 1 minute"

      - alert: GrafanaDown
        expr: up{job="grafana"} == 0
        for: 1m
        labels:
          severity: critical
          service: monitoring
        annotations:
          summary: "Grafana is down"
          description: "Grafana has been down for more than 1 minute"

      - alert: LokiDown
        expr: up{job="loki"} == 0
        for: 1m
        labels:
          severity: critical
          service: monitoring
        annotations:
          summary: "Loki is down"
          description: "Loki has been down for more than 1 minute"

      - alert: PromtailDown
        expr: up{job="promtail"} == 0
        for: 2m
        labels:
          severity: warning
          service: monitoring
        annotations:
          summary: "Promtail is down"
          description: "Promtail has been down for more than 2 minutes"

      - alert: PrometheusConfigReloadFailed
        expr: prometheus_config_last_reload_successful == 0
        for: 1m
        labels:
          severity: warning
          service: monitoring
        annotations:
          summary: "Prometheus configuration reload failed"
          description: "Prometheus configuration reload has failed"

      - alert: PrometheusTSDBReloadsFailing
        expr: increase(prometheus_tsdb_reloads_failures_total[3h]) > 0
        for: 1m
        labels:
          severity: warning
          service: monitoring
        annotations:
          summary: "Prometheus TSDB reloads failing"
          description: "Prometheus TSDB reloads are failing"

  - name: business_logic_alerts
    rules:
      - alert: UserRegistrationSpike
        expr: increase(http_requests_total{job="backend",path="/api/auth/register",status="201"}[5m]) > 50
        for: 1m
        labels:
          severity: info
          service: backend
        annotations:
          summary: "User registration spike detected"
          description: "{{ $value }} user registrations in the last 5 minutes"

      - alert: LoginFailureSpike
        expr: increase(http_requests_total{job="backend",path="/api/auth/login",status="401"}[5m]) > 20
        for: 2m
        labels:
          severity: warning
          service: backend
        annotations:
          summary: "Login failure spike detected"
          description: "{{ $value }} login failures in the last 5 minutes - possible brute force attack"
          runbook_url: "https://docs.company.com/runbooks/security-incident"

      - alert: NoUserActivity
        expr: rate(http_requests_total{job="backend",path=~"/api/.*"}[30m]) < 0.01
        for: 30m
        labels:
          severity: info
          service: backend
        annotations:
          summary: "No user activity detected"
          description: "No API requests in the last 30 minutes"

      - alert: DatabaseConnectionPoolExhaustion
        expr: mongodb_connections{state="current"} / mongodb_connections{state="available"} > 0.95
        for: 2m
        labels:
          severity: critical
          service: mongodb
        annotations:
          summary: "Database connection pool near exhaustion"
          description: "MongoDB connection pool is {{ $value | humanizePercentage }} full"