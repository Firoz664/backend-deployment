server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Backend application logs
  - job_name: backend-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: backend-app
          container: auth-backend
          __path__: /var/log/app/*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            service: service
            method: method
            path: path
            status: status
            duration: duration
            user_id: user_id
            error: error
      - labels:
          level:
          service:
          method:
          status:
      - timestamp:
          source: timestamp
          format: RFC3339
      - drop:
          expression: '.*healthcheck.*'  # Drop health check logs to reduce noise

  # Backend combined logs (alternative format)
  - job_name: backend-combined
    static_configs:
      - targets:
          - localhost
        labels:
          job: backend-combined
          container: auth-backend
          __path__: /var/log/app/combined-*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            service: service
            method: method
            path: path
            status: status
            duration: duration
            ip: ip
            user_agent: user_agent
      - labels:
          level:
          service:
          method:
          status:
      - timestamp:
          source: timestamp
          format: RFC3339

  # Backend error logs
  - job_name: backend-errors
    static_configs:
      - targets:
          - localhost
        labels:
          job: backend-errors
          container: auth-backend
          __path__: /var/log/app/error-*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            service: service
            error: error
            stack: stack
            method: method
            path: path
      - labels:
          level:
          service:
          method:
      - timestamp:
          source: timestamp
          format: RFC3339

  # Nginx access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+) - (?P<remote_user>\S+) \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
      - labels:
          method:
          status:
          path:

  # Nginx error logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-error
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<message>.*)'
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: '2006/01/02 15:04:05'

  # System logs
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<service>\S+): (?P<message>.*)'
      - labels:
          hostname:
          service:
      - timestamp:
          source: timestamp
          format: 'Jan 02 15:04:05'